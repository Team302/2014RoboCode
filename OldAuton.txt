switch (AutonMode) {
            case CLAMP_1: {
                if (TimerCount < 100) {
                    Jaws.set(DoubleSolenoid.Value.kReverse);
                    Rotator.set(true);
                    CollectorMotor.set(0);
                    TimerCount++;
                } else {
                    TimerCount = 0;

                    AutonMode = FORWARD_1;
                }
                break;
            }
            //Drive forward
            case FORWARD_1: {
                if (LeftEncoder.getDistance() < 120 || RightEncoder.getDistance() < 120) {

                    LeftCmd = (0.15 * PrateL + 0.3);
                    RightCmd = (0.15 * PrateR + 0.3);
                    /*
                     if (TimerCount < 50) {
                     LeftCmd = 0.45;
                     RightCmd = 0.45;
                     TimerCount++;
                     */
                } else {
                    LeftCmd = 0;
                    RightCmd = 0;

                    LeftEncoder.reset();
                    RightEncoder.reset();

                    TimerCount = 0;
                    AutonMode = SHOOT_1;
                }
                break;
            }
            //Shoot the first ball. Dumps ball by running collector motor backwards.
            case SHOOT_1: {
                if (TimerCount < 100) {
                    TimerCount++;
                    CollectorMotor.set(1);
                } else {
                    TimerCount = 0;
                    CollectorMotor.set(0);

                    LeftEncoder.reset();
                    RightEncoder.reset();

                    TargetRateL = -47.46428571428571;
                    TargetRateR = -47.46428571428571;

                    if (AutonSwitch) {
                        AutonMode = BACKWARD_1;
                    } else {
                        AutonMode = 0;
                    }
                }
                break;
            }
            //Drive backward
            case BACKWARD_1: {
                if (LeftEncoder.getDistance() > -120 || RightEncoder.getDistance() > -120) {
                    LeftCmd = -(0.15 * PrateL + 0.3);
                    RightCmd = -(0.15 * PrateR + 0.3);
                } else {
                    TimerCount = 0;

                    LeftEncoder.reset();
                    RightEncoder.reset();

                    TargetDistanceL = 16.10066235;
                    TargetDistanceR = -16.10066235;

                    if (AutonSwitch) {
                        AutonMode = TURN_RIGHT_90;
                    } else {
                        AutonMode = 0;
                    }
                    //LoL is fun
                    //^Message from Kyle
                }
                break;
            }
            //Turn right 90 degrees
            case TURN_RIGHT_90: {
                boolean IsTargetDistanceL = false;
                boolean IsTargetDistanceR = false;

                if (LeftEncoder.getDistance() < 16.10066235) {
                    LeftCmd = (0.25 * PdistanceL) + 0.3;
                } else {
                    IsTargetDistanceL = true;
                    LeftCmd = 0;
                }

                if (RightEncoder.getDistance() > -16.10066235) {
                    RightCmd = -(0.25 * PdistanceR) - 0.3;
                } else {
                    IsTargetDistanceR = true;
                    RightCmd = 0;
                }

                if (IsTargetDistanceL && IsTargetDistanceR) {
                    TimerCount = 0;
                    LeftEncoder.reset();
                    RightEncoder.reset();
                    AutonMode = COLLECT_BALL;
                }
                break;
            }
            //Grab a ball using whatever mechanism collects balls (no mechanism, so wait for 50 loops)
            case COLLECT_BALL: {
                if (TimerCount < 50) {
                    CollectorMotor.set(-1);
                    TimerCount++;
                } else {
                    TimerCount = 0;
                    LeftEncoder.reset();
                    RightEncoder.reset();

                    TargetDistanceL = -16.10066235;
                    TargetDistanceR = 16.10066235;

                    TargetRateL = -47.46428571428571;
                    TargetRateR = 47.46428571428571;

                    LeftCmd = -0.45;
                    RightCmd = 0.45;

                    AutonMode = TURN_LEFT_90;
                }
                break;
            }
            //Turn left after collecting the ball
            case TURN_LEFT_90: {

                boolean IsTargetDistanceL = false;
                boolean IsTargetDistanceR = false;

                if (LeftEncoder.getDistance() > -15.10066235) {
                    LeftCmd = -(0.25 * PdistanceL) - 0.2;
                } else {
                    IsTargetDistanceL = true;
                    LeftCmd = 0;
                }

                if (RightEncoder.getDistance() < 16.10066235) {
                    RightCmd = (0.25 * PdistanceR) + 0.2;
                } else {
                    IsTargetDistanceR = true;
                    RightCmd = 0;
                }

                if (IsTargetDistanceL && IsTargetDistanceR) {
                    TimerCount = 0;

                    LeftCmd = 0;
                    RightCmd = 0;

                    LeftEncoder.reset();
                    RightEncoder.reset();

                    TargetRateL = 47.46428571428571;
                    TargetRateR = 47.46428571428571;

                    AutonMode = FORWARD_2;
                }
                break;
            }
            case FORWARD_2: {
                if (LeftEncoder.getDistance() < 120 || RightEncoder.getDistance() < 120) {

                    LeftCmd = (0.15 * PrateL + 0.3);
                    RightCmd = (0.15 * PrateR + 0.3);

                } else {
                    LeftCmd = 0;
                    RightCmd = 0;

                    LeftEncoder.reset();
                    RightEncoder.reset();

                    TimerCount = 0;
                    AutonMode = SHOOT_2;
                }
                break;
            }
            //Shoot with the second ball (no shooter, so wait for 50 loops)
            case SHOOT_2: {
                if (TimerCount < 100) {
                    CollectorMotor.set(1);
                    TimerCount++;
                } else {
                    TimerCount = 0;
                    LeftEncoder.reset();
                    RightEncoder.reset();
                    LeftCmd = 0;
                    RightCmd = 0;
                }
                break;
            }
            //don't do anything--should never be called
            default: {
                CollectorMotor.set(0);
                LeftCmd = 0;
                RightCmd = 0;
                break;
            }
        }

        drive(LeftCmd, RightCmd);
